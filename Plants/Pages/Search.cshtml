@page
@model Plants.Pages.SearchModel
@{ViewBag.Title = "Search";}


<form asp-page="./Search" method="get">
    <div class="form-actions no-color">
        <p>
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-primary" /> |
            <a asp-page="./Search">Refresh</a>
        </p>
    </div>
</form>


<table class="table">
    <tr>
        <th>
            <a asp-page="Search" asp-route-sortOrder="@Model.CommonNameSort"
                asp-route-currentFilter="@Model.CurrentFilter">
                Coloquial Name
            </a>
        </th>
        <th>
            <a asp-page="Search" asp-route-sortOrder="@Model.FamilyCommonNameSort"
               asp-route-currentFilter="@Model.CurrentFilter">
                @*@Html.DisplayNameFor(model => model.FamilyCommonNameSort)*@
                Family Coloquial Name
            </a>
        </th>
    </tr>

    @foreach (var item in Model.iEnumApiData)
    {       
        <tr>
            <td>
                <a asp-page="Profile" asp-route-id="@item.id">@Html.DisplayFor(model => item.common_name)</a>
            </td>
            <td>
                @* when clicking on a family, send a string of that value to the search and auto-filter *@
                @Html.DisplayFor(model => item.family_common_name)
            </td>
        </tr>
    }
</table>

@*@{
    var prevDisabled = !Model.ApiData.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.ApiData.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.ApiData.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.ApiData.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-primary @nextDisabled">
    Next
</a>*@